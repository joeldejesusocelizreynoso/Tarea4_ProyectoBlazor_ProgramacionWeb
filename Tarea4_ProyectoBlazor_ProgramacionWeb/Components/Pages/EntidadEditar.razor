@using Tarea4_ProyectoBlazor_ProgramacionWeb.Modelos
@page "/entidad/{Tipo}/editar"
@rendermode InteractiveServer
@inject NavigationManager NavMan
@inject IJSRuntime JSx
@inject SerieContext Sc

@* <PageTitle>Editar Entidad</PageTitle> *@

<h3>Editando @Tipo</h3>

<EditForm Model="instancia" OnValidSubmit="GuardarDatos">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Nombre">Nombre</label>
        <InputText id="Nombre" class="form-control" @bind-Value="instancia.Nombre"/>
    </div>

    <div class="form-group">
        <label for="Pais">País</label>
        <InputText id="Pais" class="form-control" @bind-Value="instancia.Pais" />
    </div>

    <div class="form-group">
        <label for="Idioma">Idioma</label>
        <InputText id="Idioma" class="form-control" @bind-Value="instancia.Idioma" />
    </div>

    <div class="form-group">
        <label for="FotoUrl">Foto Url</label>
        <input type="url" id="FotoUrl" class="form-control" @bind="instancia.FotoUrl" />
    </div>

    <div class="form-group">
        <label for="Resumen">Resumen</label>
        <InputTextArea id="Resumen" class="form-control" @bind-Value="instancia.Resumen" />
    </div>

    <div class="text-center mb-3 mt-3">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-success" @onclick="Regresar">Regresar</button>
    </div>


</EditForm>

@code {
    [Parameter]
    public string Tipo { get; set; } = "";

    protected override async Task OnParametersSetAsync()
    {
        switch (Tipo)
        {
            case "libros":
                tipoEntidad = TipoEntidad.Libro;
                break;
            case "peliculas":
                tipoEntidad = TipoEntidad.Pelicula;
                break;
            case "series":
                tipoEntidad = TipoEntidad.Serie;
                break;
        }
    }

    SeriePeliculaLibro instancia = new SeriePeliculaLibro();
    TipoEntidad tipoEntidad;

    private void Regresar()
    {
        NavMan.NavigateTo($"/entidad/{Tipo}");
    }

    async Task GuardarDatos()
    {
        instancia.Tipo = tipoEntidad;
        Console.WriteLine("Guardando Datos");
        Sc.SeriePeliculaLibros.Add(instancia);
        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Datos Guardados");
        NavMan.NavigateTo($"/entidad/{Tipo}");
    }
}